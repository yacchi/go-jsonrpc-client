# Coding Rules for AI Agents

## Project language
This project prioritizes convenience as OSS, and comments and documentation for users should be generated in English, no matter what language is entered at the prompt.

### Code comments
All code comments in source files (.go) must be written in English. This includes:
- Package comments
- Function and method comments
- Inline comments
- Variable and constant declarations
- Struct and interface documentation

This rule applies to all contributors and AI assistants working on this project. Even if the prompt or conversation is in another language, all code and comments must be in English for consistency and accessibility.

## ディレクトリ配置規則
Goのパッケージは極力分割せずプロジェクトルートに格納して下さい。

- docs/     # ドキュメント
- examples/ # サンプル

## 実装方針

### 全般
- 原則go.modに記載されたGoのバージョンで利用可能なライブラリを利用します。
- ライブラリの利用者に型アサーションを行わせるインターフェースは禁止します。
- 

### テスト駆動開発
テスト駆動開発(TDD)にて開発します。

1. Red: 失敗するテストを作成
2. Green: 1で作成したテストが成功する為の実装を行う
3. Refactor: リファクタリングを行いコードを改善する

なお、エラーした場合は対象とするテストを指定し、1つずつ対応して下さい。

例: `go get -v ./... -run TestInvoke`

### コミットメッセージ規約

コミットメッセージは[Conventional Commits](https://www.conventionalcommits.org/)の形式に従います。

```
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

#### 言語

コミットメッセージは必ず英語で記述してください。これはプロジェクトの国際的な利用を促進し、より広いコミュニティでの理解を容易にするためです。

#### 主要なタイプ

- `feat`: 新機能の追加
- `fix`: バグ修正
- `docs`: ドキュメントのみの変更
- `style`: コードの意味に影響を与えない変更（空白、フォーマット、セミコロンの欠落など）
- `refactor`: バグ修正でも機能追加でもないコード変更
- `perf`: パフォーマンスを向上させるコード変更
- `test`: 不足しているテストの追加や既存のテストの修正
- `chore`: ビルドプロセスやドキュメント生成などの補助ツールやライブラリの変更

#### 例

```
feat: add options to HTTPTransport
fix: fix client connection error handling
test: add tests for HTTPTransport options
```

### 基本的なコマンド

Lint、フォーマット、テストなどは開発者と同じ操作ができるようにMakefileを経由して実行します。
足りないコマンドがあれば開発者に相談して下さい。 

```bash
$ make help
Usage: make [target]

Targets:
  clean    Remove build artifacts
  format   Format the source code
  lint     Lint the source code
  test     Run tests
```

単独のテストの実行などで直接実行する必要がある場合は、直接実行してください。

- 単一テストの実行: go test -v ./client_test.go
